//SQL Table
mysql> create table product(pid int primary key,pname varchar(30),price double,mdate date);
Query OK, 0 rows affected (2.18 sec)

//Connection

package com.day15;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

public class ConnectionUtil {

	public static Connection getConnection() {
		Connection con=null;
		try {
			
			Class.forName("com.mysql.cj.jdbc.Driver");
			con=DriverManager.getConnection("jdbc:mysql://localhost:3306/jdbc","root","logan1704");
					
			
	}
		catch(Exception e) {
			System.out.println(e);
		}
		
			
		
		return con;
	}

	
	
}

//Product Class

package com.day15;

import java.util.Date;

public class Product {
	
	private int pid;
	private String pname;
	private double price;
	private Date mdate;
	public Product() {
		super();
		// TODO Auto-generated constructor stub
	}
	public int getPid() {
		return pid;
	}
	public void setPid(int pid) {
		this.pid = pid;
	}
	public String getPname() {
		return pname;
	}
	public void setPname(String pname) {
		this.pname = pname;
	}
	public double getPrice() {
		return price;
	}
	public void setPrice(double price) {
		this.price = price;
	}
	public Date getMdate() {
		return mdate;
	}
	public void setMdate(Date mdate) {
		this.mdate = mdate;
	}
	public Product(int pid, String pname, double price, Date mdate) {
		super();
		this.pid = pid;
		this.pname = pname;
		this.price = price;
		this.mdate = mdate;
	}
	
	

}
//Program

package com.day15;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Random;
import java.util.Scanner;

public class ProductTable {

	public static void main(String[] args) {

				Scanner s=new Scanner(System.in);
				System.out.println("############Product Information#########");
				int choice;
				do {
					System.out.println("1. Insert Product");
					System.out.println("2. Update Product");
					System.out.println("3. Delete Product");
					System.out.println("4. Select Product");
					System.out.println("5. Exit");
					System.out.println("Enter the choice");
					choice=Integer.parseInt(s.nextLine());
					switch(choice) {
					case 1:
						System.out.println("Enter Product name");
						String name=s.nextLine();
						System.out.println("Enter Product price");
						double price=Double.parseDouble(s.nextLine());
						System.out.println("Enter Manufacture Date");
						String mdate=s.nextLine();
						SimpleDateFormat sdf=new SimpleDateFormat("dd-MM-yyyy");
						Date date=null;
						try {
							date=sdf.parse(mdate);
						}
						catch(ParseException e) {
							System.out.println(e);
						}
						Random r=new Random();
						int pid=r.nextInt(99999)+10000;
						Connection con=null;
						try {
							con=ConnectionUtil.getConnection();
							PreparedStatement ps=con.prepareStatement("Insert into product values(?,?,?,?)");
							ps.setInt(1,pid);
							ps.setString(2, name);
							ps.setDouble(3,price);
						    java.sql.Date manufacDate=new java.sql.Date(date.getTime());
						    ps.setDate(4,manufacDate);
						    int no_of_Rows=ps.executeUpdate();
						    if(no_of_Rows==1)
						    	System.out.println("Product Record inserted Successfully");  
							}
						catch(Exception e) {
							
						}
						finally {
							if(con!=null)
								try {
									con.close();
								}
							catch(SQLException e) {
								e.printStackTrace();
							}
						}
						
						break;
					case 2:
						System.out.println("Enter product id");
						int pid1=Integer.parseInt(s.nextLine());
					    System.out.println("Enter new product name");
					    String pname=s.nextLine();
					    System.out.println("Enter new product price");
					    double price1=Double.parseDouble(s.nextLine());
						Connection con1=null;
						try {
							con1=ConnectionUtil.getConnection();
							PreparedStatement ps1=con1.prepareStatement("Update product set pname=?,price=? where pid=?");
							ps1.setString(1, pname);
							ps1.setDouble(2,price1);
							ps1.setInt(3,pid1);
							int rows=ps1.executeUpdate();
							if(rows==1) {
								System.out.println("Product record updated successfully");
 							}
						}
						catch(Exception e) {
							System.out.println(e);
						}
						finally {
							if(con1!=null)
								try {
									con1.close();
								}
							catch(SQLException e) {
								e.printStackTrace();
							}
						}
						
						break;
					case 3:
						System.out.println("Enter product id");
						int p_id=Integer.parseInt(s.nextLine());
						Connection con2=null;
						try {
							con2=ConnectionUtil.getConnection();
							PreparedStatement ps2=con2.prepareStatement("Delete from product where pid=?");
							ps2.setInt(1, p_id);
							int deleteRow=ps2.executeUpdate();
							if(deleteRow==1)
							System.out.println("Product record deleted successfully");
								}
						catch(Exception e) {
							
						}
						finally {
							if(con2!=null)
								try {
									con2.close();
								}
							catch(SQLException e) {
								e.printStackTrace();
							}
						}
						
						break;
					case 4:
						Connection con3=null;
						try {
							con3=ConnectionUtil.getConnection();
							Statement st=con3.createStatement();
							ResultSet rs=st.executeQuery("select * from product");
							List<Product> l=new ArrayList<>();
							while(rs.next()) {
								Product pro=new Product();
								pro.setPid(rs.getInt(1));
								pro.setPname(rs.getString(2));
								pro.setPrice(rs.getDouble(3));
								Date madate1=new Date(rs.getDate(4).getTime());
								pro.setMdate(madate1);
								l.add(pro);
								
							}
							System.out.printf("%15s %20s %5s %10s \n","ProductId","ProductName","Price","Manufacture Date");
							for(Product prod:l) {
								System.out.printf("%15s %15s %10s %10s \n",prod.getPid(),prod.getPname(),prod.getPrice(),prod.getMdate());
							}
						}
						catch(Exception e) {
							
						}
						finally {
							if(con3!=null)
								try {
									con3.close();
								}
							catch(SQLException e) {
								e.printStackTrace();
							}
						}
						
						
						
						break;
					case 5:
						System.exit(0);
						break;
				}			
				}
				while(choice<5);
				

			}

		

	}


